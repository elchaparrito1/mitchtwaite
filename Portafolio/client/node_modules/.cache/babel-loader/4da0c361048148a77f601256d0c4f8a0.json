{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/mitchellwaite/Personal-Website/mitchtwaite/Portafolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject8() {\n  const data = _taggedTemplateLiteral([\"\\n    font-size: 40px; \\n    cursor: pointer; \\n    margin: 0 0 0 15px; \\n    display: inline-block;\\n    color: #111;\\n\\n    @media only screen and (min-width: 320px) and (max-width: 767px) {\\n        font-size: 30px;\\n    }\\n\\n\"]);\n\n  _templateObject8 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  const data = _taggedTemplateLiteral([\"\\n    margin: 5px 0 0 0;\\n\"]);\n\n  _templateObject7 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  const data = _taggedTemplateLiteral([\"\\n    background-color: none;\\n    list-style-type: none;\\n    \\n\\n    &:hover \", \" {\\n        opacity: 0.5;\\n    }\\n\\n    &:hover \", \":hover {\\n        opacity: 1;\\n    }\\n\"]);\n\n  _templateObject6 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  const data = _taggedTemplateLiteral([\"\\n    ::after {\\n        content: '';\\n        display: block;\\n        width: 0;\\n        height: 2px;\\n        background: white;\\n        transition: width .3s;\\n        margin-top: 4px;\\n        \\n    }\\n\\n    :hover {\\n        color: white;\\n        opacity: 1;\\n        cursor: pointer;\\n    }\\n\\n    :hover::after {\\n        width: 100%;\\n        outline: none;\\n    }\\n\"]);\n\n  _templateObject5 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n    color: white;\\n    font-family: \\\"Lato\\\", Helvetica, sans-serif;\\n    display: inline-block;\\n    margin-top: \", \";\\n    background: none;\\n    border: none;\\n    outline: none;\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n    color: black;\\n    float: right;\\n    font-family: \\\"Lato\\\", Helvetica, sans-serif;\\n    font-size: 20px;\\n    margin: \", \";\\n    position: relative;\\n    text-decoration: none;\\n    z-index: 1;\\n    \\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    float: left;\\n    \", \";\\n\\n    @media only screen and (min-width: 768px) {\\n        \", \";\\n    }\\n\\n    @media only screen and (min-width: 992px) {\\n        \", \";\\n    }\\n\\n    @media only screen and (min-width: 1200px) {\\n        \", \";\\n    }\\n\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    &::after {\\n        content: \\\"\\\";\\n        clear: both;\\n        display: table;\\n    }\\n    background: linear-gradient(rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.3));\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from \"styled-components\"; // import { Link } from \"react-router-dom\";\n\nexport const Row = styled.div(_templateObject());\n\nfunction getWidthString(span) {\n  if (!span) return;\n  let width = span / 12 * 100;\n  return \"width \".concat(width, \"%;\");\n}\n\nexport const Column = styled.div(_templateObject2(), ({\n  xs\n}) => xs ? getWidthString(xs) : \"width: 100%\", ({\n  sm\n}) => sm && getWidthString(sm), ({\n  md\n}) => md && getWidthString(md), ({\n  lg\n}) => lg && getWidthString(lg));\nexport const Pages = styled.th(_templateObject3(), props => props.contact ? \"25px 100px 0 0\" : \"25px 30px 0 0\");\nexport const SideLinks = styled.button(_templateObject4(), props => props.resume ? \"30px\" : \"\");\nexport const Links = styled(SideLinks)(_templateObject5());\nexport const List = styled.tr(_templateObject6(), Links, Links); //Hamburger icon navbar styling\n\nexport const HamburgerPages = styled(Pages)(_templateObject7());\nexport const Hamburger = styled.span(_templateObject8());","map":{"version":3,"sources":["/Users/mitchellwaite/Personal-Website/mitchtwaite/Portafolio/client/src/components/Navbar/styled.js"],"names":["styled","Row","div","getWidthString","span","width","Column","xs","sm","md","lg","Pages","th","props","contact","SideLinks","button","resume","Links","List","tr","HamburgerPages","Hamburger"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB,C,CACA;;AAGA,OAAO,MAAMC,GAAG,GAAGD,MAAM,CAACE,GAAV,mBAAT;;AASP,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAC1B,MAAI,CAACA,IAAL,EAAW;AAEX,MAAIC,KAAK,GAAGD,IAAI,GAAG,EAAP,GAAY,GAAxB;AACA,yBAAgBC,KAAhB;AACH;;AAED,OAAO,MAAMC,MAAM,GAAGN,MAAM,CAACE,GAAV,qBAEb,CAAC;AAAEK,EAAAA;AAAF,CAAD,KAAaA,EAAE,GAAGJ,cAAc,CAACI,EAAD,CAAjB,GAAwB,aAF1B,EAKT,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAYA,EAAE,IAAIL,cAAc,CAACK,EAAD,CALvB,EAST,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAYA,EAAE,IAAIN,cAAc,CAACM,EAAD,CATvB,EAaT,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAYA,EAAE,IAAIP,cAAc,CAACO,EAAD,CAbvB,CAAZ;AAkBP,OAAO,MAAMC,KAAK,GAAGX,MAAM,CAACY,EAAV,qBAKJC,KAAK,IAAIA,KAAK,CAACC,OAAN,GAAgB,gBAAhB,GAAmC,eALxC,CAAX;AAYP,OAAO,MAAMC,SAAS,GAAIf,MAAM,CAACgB,MAAX,qBAIJH,KAAK,IAAIA,KAAK,CAACI,MAAN,GAAe,MAAf,GAAwB,EAJ7B,CAAf;AAUP,OAAO,MAAMC,KAAK,GAAGlB,MAAM,CAACe,SAAD,CAAT,oBAAX;AAyBP,OAAO,MAAMI,IAAI,GAAGnB,MAAM,CAACoB,EAAV,qBAKHF,KALG,EASHA,KATG,CAAV,C,CAcP;;AAEA,OAAO,MAAMG,cAAc,GAAGrB,MAAM,CAACW,KAAD,CAAT,oBAApB;AAIP,OAAO,MAAMW,SAAS,GAAGtB,MAAM,CAACI,IAAV,oBAAf","sourcesContent":["import styled from \"styled-components\";\n// import { Link } from \"react-router-dom\";\n\n\nexport const Row = styled.div`\n    &::after {\n        content: \"\";\n        clear: both;\n        display: table;\n    }\n    background: linear-gradient(rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.3));\n`;\n\nfunction getWidthString(span) {\n    if (!span) return;\n\n    let width = span / 12 * 100;\n    return `width ${width}%;`;\n}\n\nexport const Column = styled.div`\n    float: left;\n    ${({ xs }) => (xs ? getWidthString(xs) : \"width: 100%\")};\n\n    @media only screen and (min-width: 768px) {\n        ${({ sm }) => sm && getWidthString(sm)};\n    }\n\n    @media only screen and (min-width: 992px) {\n        ${({ md }) => md && getWidthString(md)};\n    }\n\n    @media only screen and (min-width: 1200px) {\n        ${({ lg }) => lg && getWidthString(lg)};\n    }\n\n`;\n\nexport const Pages = styled.th`\n    color: black;\n    float: right;\n    font-family: \"Lato\", Helvetica, sans-serif;\n    font-size: 20px;\n    margin: ${props => props.contact ? \"25px 100px 0 0\" : \"25px 30px 0 0\"};\n    position: relative;\n    text-decoration: none;\n    z-index: 1;\n    \n`;\n\nexport const SideLinks =  styled.button`\n    color: white;\n    font-family: \"Lato\", Helvetica, sans-serif;\n    display: inline-block;\n    margin-top: ${props => props.resume ? \"30px\" : \"\"};\n    background: none;\n    border: none;\n    outline: none;\n`;\n\nexport const Links = styled(SideLinks)`\n    ::after {\n        content: '';\n        display: block;\n        width: 0;\n        height: 2px;\n        background: white;\n        transition: width .3s;\n        margin-top: 4px;\n        \n    }\n\n    :hover {\n        color: white;\n        opacity: 1;\n        cursor: pointer;\n    }\n\n    :hover::after {\n        width: 100%;\n        outline: none;\n    }\n`;\n\n\nexport const List = styled.tr`\n    background-color: none;\n    list-style-type: none;\n    \n\n    &:hover ${Links} {\n        opacity: 0.5;\n    }\n\n    &:hover ${Links}:hover {\n        opacity: 1;\n    }\n`;\n\n//Hamburger icon navbar styling\n\nexport const HamburgerPages = styled(Pages)`\n    margin: 5px 0 0 0;\n`;\n\nexport const Hamburger = styled.span`\n    font-size: 40px; \n    cursor: pointer; \n    margin: 0 0 0 15px; \n    display: inline-block;\n    color: #111;\n\n    @media only screen and (min-width: 320px) and (max-width: 767px) {\n        font-size: 30px;\n    }\n\n`;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}