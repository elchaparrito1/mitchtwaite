{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/mitchellwaite/Personal-Website/mitchtwaite/Portafolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject7() {\n  const data = _taggedTemplateLiteral([\"\\n    width: 1px;\\n    display: block;\\n    height: 1px;\\n    border: 0;\\n    border-top: 2px solid #003366;\\n    padding: 0;\\n  \\n    -webkit-animation: increase 3s;\\n    -moz-animation:    increase 3s; \\n    -o-animation:      increase 3s; \\n    animation:         increase 3s; \\n    animation-fill-mode: forwards;\\n\\n    @keyframes increase {\\n        100% {\\n            width: 40%;\\n        }\\n\\n    }\\n\\n    @media only screen and (min-width: 320px) and (max-width: 767px) {\\n        @keyframes increase {\\n            100% {\\n                width: 80%;\\n            }\\n        }\\n    }\\n\\n    @media only screen and (min-width: 767px) and (max-width: 1024px) {\\n        @keyframes increase {\\n            100% {\\n                width: 70%;\\n            }\\n        }\\n    }\\n    \\n\"]);\n\n  _templateObject7 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  const data = _taggedTemplateLiteral([\"\\n    color: black;\\n    font-family: Roboto+Slab, Helvetica, sans-serif;\\n    font-size: 2.6em;\\n    text-align: center;\\n\\n    @media only screen and (min-width: 320px) and (max-width: 767px) {\\n        font-size: 1.5em;\\n    }\\n\\n    @media only screen and (min-width: 767px) and (max-width: 1024px) {\\n        font-size: 3em;\\n    }\\n\\n\"]);\n\n  _templateObject6 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  const data = _taggedTemplateLiteral([\"\\n    color: black;\\n    font-family: Lato:400,900, Helvetica, sans-serif;\\n    font-size: \", \";\\n    margin-bottom: 50px;\\n    text-align: center;\\n\\n    @media only screen and (min-width: 320px) and (max-width: 767px) {\\n        font-size: \", \";\\n    }\\n\\n    @media only screen and (min-width: 767px) and (max-width: 1024px) {\\n        font-size: \", \";\\n    }\\n    \\n\"]);\n\n  _templateObject5 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n    display: table-cell;\\n    vertical-align: middle;\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n    display: table;\\n    height: 100vh;\\n    width: 100%;\\n\\n    position: absolute;\\n    top: 0;\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    float: left;\\n    margin-bottom: \", \";\\n    \", \";\\n\\n    @media only screen and (min-width: 768px) {\\n        \", \";\\n    }\\n\\n    @media only screen and (min-width: 992px) {\\n        \", \";\\n    }\\n\\n    @media only screen and (min-width: 1200px) {\\n        \", \";\\n    }\\n\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    &::after {\\n        content: \\\"\\\";\\n        clear: both;\\n        display: table;\\n    }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from \"styled-components\";\nexport const Row = styled.div(_templateObject());\n\nfunction getWidthString(span) {\n  if (!span) return;\n  let width = span / 12 * 100;\n  return \"width \".concat(width, \"%;\");\n}\n\nexport const Column = styled.div(_templateObject2(), props => props.myname ? \"100px\" : \"20px\", ({\n  xs\n}) => xs ? getWidthString(xs) : \"width: 100%\", ({\n  sm\n}) => sm && getWidthString(sm), ({\n  md\n}) => md && getWidthString(md), ({\n  lg\n}) => lg && getWidthString(lg)); // export const Parallax = styled.div`\n//     background-attachment: fixed;\n//     background-color: black;\n//     background-repeat: no-repeat;\n//     background-size: cover;\n//     background-position: center;\n//     overflow: hidden;\n//     overflow-y: auto;\n//     min-height: 500px;\n//     height: 100vh;\n//     z-index: -1;\n// `;\n\nexport const ParentDiv = styled.div(_templateObject3());\nexport const ChildDiv = styled.div(_templateObject4());\nexport const Header = styled.h1(_templateObject5(), props => props.primary ? \"3em\" : \"5.5em\", props => props.primary ? \"1.8em\" : \"2.8em\", props => props.primary ? \"4em\" : \"6em\");\nexport const Text = styled.p(_templateObject6());\nexport const Line = styled.hr(_templateObject7());","map":{"version":3,"sources":["/Users/mitchellwaite/Personal-Website/mitchtwaite/Portafolio/client/src/components/ParallaxComponent/styled.js"],"names":["styled","Row","div","getWidthString","span","width","Column","props","myname","xs","sm","md","lg","ParentDiv","ChildDiv","Header","h1","primary","Text","p","Line","hr"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AAEA,OAAO,MAAMC,GAAG,GAAGD,MAAM,CAACE,GAAV,mBAAT;;AAQP,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAC1B,MAAI,CAACA,IAAL,EAAW;AAEX,MAAIC,KAAK,GAAGD,IAAI,GAAG,EAAP,GAAY,GAAxB;AACA,yBAAgBC,KAAhB;AACH;;AAED,OAAO,MAAMC,MAAM,GAAGN,MAAM,CAACE,GAAV,qBAEEK,KAAK,IAAIA,KAAK,CAACC,MAAN,GAAe,OAAf,GAAyB,MAFpC,EAGb,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAaA,EAAE,GAAGN,cAAc,CAACM,EAAD,CAAjB,GAAwB,aAH1B,EAMT,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAYA,EAAE,IAAIP,cAAc,CAACO,EAAD,CANvB,EAUT,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAYA,EAAE,IAAIR,cAAc,CAACQ,EAAD,CAVvB,EAcT,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAYA,EAAE,IAAIT,cAAc,CAACS,EAAD,CAdvB,CAAZ,C,CAmBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,SAAS,GAAGb,MAAM,CAACE,GAAV,oBAAf;AASP,OAAO,MAAMY,QAAQ,GAAGd,MAAM,CAACE,GAAV,oBAAd;AAKP,OAAO,MAAMa,MAAM,GAAGf,MAAM,CAACgB,EAAV,qBAGFT,KAAK,IAAIA,KAAK,CAACU,OAAN,GAAgB,KAAhB,GAAwB,OAH/B,EAQEV,KAAK,IAAIA,KAAK,CAACU,OAAN,GAAgB,OAAhB,GAA0B,OARrC,EAYEV,KAAK,IAAIA,KAAK,CAACU,OAAN,GAAgB,KAAhB,GAAwB,KAZnC,CAAZ;AAiBP,OAAO,MAAMC,IAAI,GAAGlB,MAAM,CAACmB,CAAV,oBAAV;AAgBP,OAAO,MAAMC,IAAI,GAAGpB,MAAM,CAACqB,EAAV,oBAAV","sourcesContent":["import styled from \"styled-components\";\n\nexport const Row = styled.div`\n    &::after {\n        content: \"\";\n        clear: both;\n        display: table;\n    }\n`;\n\nfunction getWidthString(span) {\n    if (!span) return;\n\n    let width = span / 12 * 100;\n    return `width ${width}%;`;\n}\n\nexport const Column = styled.div`\n    float: left;\n    margin-bottom: ${props => props.myname ? \"100px\" : \"20px\"};\n    ${({ xs }) => (xs ? getWidthString(xs) : \"width: 100%\")};\n\n    @media only screen and (min-width: 768px) {\n        ${({ sm }) => sm && getWidthString(sm)};\n    }\n\n    @media only screen and (min-width: 992px) {\n        ${({ md }) => md && getWidthString(md)};\n    }\n\n    @media only screen and (min-width: 1200px) {\n        ${({ lg }) => lg && getWidthString(lg)};\n    }\n\n`;\n\n// export const Parallax = styled.div`\n//     background-attachment: fixed;\n//     background-color: black;\n//     background-repeat: no-repeat;\n//     background-size: cover;\n//     background-position: center;\n//     overflow: hidden;\n//     overflow-y: auto;\n//     min-height: 500px;\n//     height: 100vh;\n//     z-index: -1;\n// `;\n\nexport const ParentDiv = styled.div`\n    display: table;\n    height: 100vh;\n    width: 100%;\n\n    position: absolute;\n    top: 0;\n`;\n\nexport const ChildDiv = styled.div`\n    display: table-cell;\n    vertical-align: middle;\n`;\n\nexport const Header = styled.h1`\n    color: black;\n    font-family: Lato:400,900, Helvetica, sans-serif;\n    font-size: ${props => props.primary ? \"3em\" : \"5.5em\"};\n    margin-bottom: 50px;\n    text-align: center;\n\n    @media only screen and (min-width: 320px) and (max-width: 767px) {\n        font-size: ${props => props.primary ? \"1.8em\" : \"2.8em\"};\n    }\n\n    @media only screen and (min-width: 767px) and (max-width: 1024px) {\n        font-size: ${props => props.primary ? \"4em\" : \"6em\"};\n    }\n    \n`;\n\nexport const Text = styled.p`\n    color: black;\n    font-family: Roboto+Slab, Helvetica, sans-serif;\n    font-size: 2.6em;\n    text-align: center;\n\n    @media only screen and (min-width: 320px) and (max-width: 767px) {\n        font-size: 1.5em;\n    }\n\n    @media only screen and (min-width: 767px) and (max-width: 1024px) {\n        font-size: 3em;\n    }\n\n`;\n\nexport const Line = styled.hr`\n    width: 1px;\n    display: block;\n    height: 1px;\n    border: 0;\n    border-top: 2px solid #003366;\n    padding: 0;\n  \n    -webkit-animation: increase 3s;\n    -moz-animation:    increase 3s; \n    -o-animation:      increase 3s; \n    animation:         increase 3s; \n    animation-fill-mode: forwards;\n\n    @keyframes increase {\n        100% {\n            width: 40%;\n        }\n\n    }\n\n    @media only screen and (min-width: 320px) and (max-width: 767px) {\n        @keyframes increase {\n            100% {\n                width: 80%;\n            }\n        }\n    }\n\n    @media only screen and (min-width: 767px) and (max-width: 1024px) {\n        @keyframes increase {\n            100% {\n                width: 70%;\n            }\n        }\n    }\n    \n`;"]},"metadata":{},"sourceType":"module"}