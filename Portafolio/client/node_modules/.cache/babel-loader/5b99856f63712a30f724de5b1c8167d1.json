{"ast":null,"code":"var _jsxFileName = \"/Users/mitchellwaite/Personal-Website/mitchtwaite/Portafolio/client/src/components/MyContacts/MyContact.js\";\nimport React from \"react\";\nimport EmailMe from \"../MyContacts/EmailMe\";\nimport CallMe from \"../MyContacts/CallMe\";\nimport Bounce from \"react-reveal/Bounce\";\nimport axios from \"axios\";\nimport Chatkit from \"@pusher/chatkit-client\";\nimport ChatWidget from \"../../components/ChatWidget/ChatWidget\";\nimport DialogModal from \"../Modals/DialogModal\";\nimport { Row, Column, Timer, TimerText, Box, Head, Text, Loader } from \"./styled\";\n\nvar moment = require(\"moment-timezone\");\n\nclass MyContacts extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      time: moment().tz(\"America/Denver\").format(\"h:mm:ss a\"),\n      day: new Date().getDay(),\n      currentUser: null,\n      currentRoom: null,\n      newMessage: \"\",\n      messages: [],\n      isLoading: false,\n      userId: \"\",\n      isDialogOpen: false\n    };\n\n    this.handleBox = () => {\n      this.setState({\n        currentUser: null,\n        currentRoom: null,\n        newMessage: \"\",\n        messages: [],\n        isLoading: false,\n        userId: \"\",\n        isDialogOpen: false\n      }); // console.log(\"Ran?\", this.state.isChatOpen);\n\n      this.props.callbackFromParent(false);\n    };\n\n    this.handleInput = event => {\n      const _event$target = event.target,\n            value = _event$target.value,\n            name = _event$target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.sendMessage = event => {\n      event.preventDefault();\n      const _this$state = this.state,\n            newMessage = _this$state.newMessage,\n            currentUser = _this$state.currentUser,\n            currentRoom = _this$state.currentRoom;\n      if (newMessage.trim() === \"\") return;\n      currentUser.sendMessage({\n        text: newMessage,\n        roomId: \"\".concat(currentRoom.id)\n      });\n      this.setState({\n        newMessage: \"\"\n      });\n    };\n\n    this.connectToRoom = id => {\n      const currentUser = this.state.currentUser;\n      return currentUser.subscribeToRoom({\n        roomId: \"\".concat(id),\n        messageLimit: 100,\n        hooks: {\n          onMessage: message => {\n            this.setState({\n              messages: [...this.state.messages, message]\n            });\n          }\n        }\n      }).then(currentRoom => {\n        this.setState({\n          currentRoom,\n          isChatOpen: true\n        });\n        this.props.callbackFromParent(true);\n      });\n    };\n\n    this.showDialog = () => {\n      this.setState({\n        isDialogOpen: !this.state.isDialogOpen\n      });\n    };\n\n    this.addSupportStaffToRoom = () => {\n      const _this$state2 = this.state,\n            currentRoom = _this$state2.currentRoom,\n            currentUser = _this$state2.currentUser;\n      return currentUser.addUserToRoom({\n        userId: \"support\",\n        roomId: currentRoom.id\n      });\n    };\n\n    this.createRoom = () => {\n      const currentUser = this.state.currentUser;\n      currentUser.createRoom({\n        name: currentUser.name,\n        private: true\n      }).then(room => this.connectToRoom(room.id)).then(() => this.addSupportStaffToRoom()).catch(console.error);\n    };\n\n    this.launchChat = event => {\n      event.preventDefault();\n      this.setState({\n        isDialogOpen: false,\n        isLoading: true\n      });\n      const userId = this.state.userId;\n\n      if (userId === null || userId.trim() === \"\") {\n        alert(\"Invalid userId\");\n      } else {\n        axios.post(\"http://localhost:3000/users\", {\n          userId\n        }).then(() => {\n          const tokenProvider = new Chatkit.TokenProvider({\n            url: \"http://localhost:3000/authenticate\"\n          });\n          const chatManager = new Chatkit.ChatManager({\n            instanceLocator: \"v1:us1:f1cbf8e9-3cc8-4abe-8013-6f535f84c39f\",\n            userId,\n            tokenProvider\n          });\n          return chatManager.connect().then(currentUser => {\n            this.setState({\n              currentUser,\n              isLoading: false\n            }, () => this.createRoom());\n          });\n        }).catch(console.error);\n      }\n    };\n\n    this.handleDay = num => {\n      let day;\n\n      switch (num) {\n        case 0:\n          day = \"Sunday\";\n          break;\n\n        case 1:\n          day = \"Monday\";\n          break;\n\n        case 2:\n          day = \"Tuesday\";\n          break;\n\n        case 3:\n          day = \"Wednesday\";\n          break;\n\n        case 4:\n          day = \"Thursday\";\n          break;\n\n        case 5:\n          day = \"Friday\";\n          break;\n\n        case 6:\n          day = \"Saturday\";\n          break;\n\n        default:\n          day = \"I don't know what day it is!\";\n      }\n\n      return day;\n    };\n\n    this.checkTime = () => {\n      let time = new Date();\n      let hours = time.getHours();\n\n      if (this.state.day === 0 || hours < 8 || hours > 20) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        }, React.createElement(Column, {\n          lg: \"12\",\n          md: \"12\",\n          sm: \"12\",\n          xs: \"12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }, React.createElement(TimerText, {\n          style: {\n            color: \"red\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }, \"I'm not available\"))), React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }, React.createElement(Column, {\n          lg: \"12\",\n          md: \"12\",\n          sm: \"12\",\n          xs: \"12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          },\n          __self: this\n        }, React.createElement(TimerText, {\n          style: {\n            color: \"red\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          },\n          __self: this\n        }, \"Current time: \", this.state.time))), React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224\n          },\n          __self: this\n        }, React.createElement(Column, {\n          lg: \"12\",\n          md: \"12\",\n          sm: \"12\",\n          xs: \"12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225\n          },\n          __self: this\n        }, React.createElement(TimerText, {\n          style: {\n            color: \"red\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          },\n          __self: this\n        }, \"Day: \", this.handleDay(this.state.day)))));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        }, React.createElement(Column, {\n          lg: \"12\",\n          md: \"12\",\n          sm: \"12\",\n          xs: \"12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237\n          },\n          __self: this\n        }, React.createElement(TimerText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238\n          },\n          __self: this\n        }, \"I'm available\"))), React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243\n          },\n          __self: this\n        }, React.createElement(Column, {\n          lg: \"12\",\n          md: \"12\",\n          sm: \"12\",\n          xs: \"12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244\n          },\n          __self: this\n        }, React.createElement(TimerText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245\n          },\n          __self: this\n        }, \"Current time: \", this.state.time))), React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250\n          },\n          __self: this\n        }, React.createElement(Column, {\n          lg: \"12\",\n          md: \"12\",\n          sm: \"12\",\n          xs: \"12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251\n          },\n          __self: this\n        }, React.createElement(TimerText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252\n          },\n          __self: this\n        }, \"Day: \", this.handleDay(this.state.day)))));\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => this.setState({\n      time: moment().tz(\"America/Denver\").format(\"h:mm:ss a\"),\n      day: new Date().getDay()\n    }), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    const _this$state3 = this.state,\n          newMessage = _this$state3.newMessage,\n          messages = _this$state3.messages,\n          currentUser = _this$state3.currentUser,\n          currentRoom = _this$state3.currentRoom,\n          isDialogOpen = _this$state3.isDialogOpen,\n          userId = _this$state3.userId,\n          isLoading = _this$state3.isLoading;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }), React.createElement(Bounce, {\n      bottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(Row, {\n      style: {\n        width: \"90%\",\n        margin: \"0 auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(Column, {\n      lg: \"4\",\n      md: \"4\",\n      sm: \"12\",\n      xs: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(EmailMe, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    })), React.createElement(Column, {\n      lg: \"4\",\n      md: \"4\",\n      sm: \"12\",\n      xs: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(CallMe, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    })), React.createElement(Column, {\n      lg: \"4\",\n      md: \"4\",\n      sm: \"12\",\n      xs: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        margin: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(Box, {\n      onClick: this.showDialog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(Column, {\n      lg: \"12\",\n      md: \"12\",\n      sm: \"12\",\n      xs: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(Head, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, \"MESSAGE\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(Column, {\n      lg: \"12\",\n      md: \"12\",\n      sm: \"12\",\n      xs: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, \"We can also live chat online. Drop me a line here. Again, if the below text is red, I'm not available, but you can leave me a message and I'll respond as soon as possible.\"))))), currentRoom ? React.createElement(ChatWidget, {\n      handleBox: this.handleBox,\n      newMessage: newMessage,\n      sendMessage: this.sendMessage,\n      handleInput: this.handleInput,\n      currentUser: currentUser,\n      messages: messages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }) : null, isLoading ? React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }) : null, isDialogOpen ? React.createElement(DialogModal, {\n      username: userId,\n      handleInput: this.handleInput,\n      launchChat: this.launchChat,\n      handleBox: this.handleBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }) : null)))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, React.createElement(Column, {\n      lg: \"12\",\n      md: \"12\",\n      sm: \"12\",\n      xs: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, React.createElement(Timer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, this.checkTime()))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\nexport default MyContacts;","map":{"version":3,"sources":["/Users/mitchellwaite/Personal-Website/mitchtwaite/Portafolio/client/src/components/MyContacts/MyContact.js"],"names":["React","EmailMe","CallMe","Bounce","axios","Chatkit","ChatWidget","DialogModal","Row","Column","Timer","TimerText","Box","Head","Text","Loader","moment","require","MyContacts","Component","state","time","tz","format","day","Date","getDay","currentUser","currentRoom","newMessage","messages","isLoading","userId","isDialogOpen","handleBox","setState","props","callbackFromParent","handleInput","event","target","value","name","sendMessage","preventDefault","trim","text","roomId","id","connectToRoom","subscribeToRoom","messageLimit","hooks","onMessage","message","then","isChatOpen","showDialog","addSupportStaffToRoom","addUserToRoom","createRoom","private","room","catch","console","error","launchChat","alert","post","tokenProvider","TokenProvider","url","chatManager","ChatManager","instanceLocator","connect","handleDay","num","checkTime","hours","getHours","color","componentDidMount","interval","setInterval","componentWillUnmount","clearInterval","render","width","margin"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport EmailMe from \"../MyContacts/EmailMe\";\nimport CallMe from \"../MyContacts/CallMe\";\nimport Bounce from \"react-reveal/Bounce\";\nimport axios from \"axios\";\nimport Chatkit from \"@pusher/chatkit-client\";\nimport ChatWidget from \"../../components/ChatWidget/ChatWidget\";\nimport DialogModal from \"../Modals/DialogModal\";\nimport {\n    Row,\n    Column,\n    Timer,\n    TimerText,\n    Box,\n    Head,\n    Text,\n    Loader\n} from \"./styled\";\nvar moment = require(\"moment-timezone\");\n\n\n\nclass MyContacts extends React.Component {\n    state = {\n        time: moment().tz(\"America/Denver\").format(\"h:mm:ss a\"),\n        day: new Date().getDay(),\n        currentUser: null,\n        currentRoom: null,\n        newMessage: \"\",\n        messages: [],\n        isLoading: false,\n        userId: \"\",\n        isDialogOpen: false\n    }\n\n    componentDidMount() {\n        this.interval = setInterval(() => this.setState({ \n            time: moment().tz(\"America/Denver\").format(\"h:mm:ss a\"),\n            day: new Date().getDay()\n        }), 1000);\n    }\n\n    componentWillUnmount() { \n       clearInterval(this.interval);\n    }\n  \n    handleBox = () => {\n        this.setState({\n            currentUser: null,\n            currentRoom: null,\n            newMessage: \"\",\n            messages: [],\n            isLoading: false,\n            userId: \"\",\n            isDialogOpen: false\n        });\n        // console.log(\"Ran?\", this.state.isChatOpen);\n        this.props.callbackFromParent(false);\n      };\n\n    handleInput = (event) => {\n          const { value, name } = event.target;\n          this.setState({\n            [name]: value\n          });\n        }\n        \n    sendMessage = (event) => {\n          event.preventDefault();\n          const { newMessage, currentUser, currentRoom } = this.state;\n      \n          if (newMessage.trim() === \"\") return;\n      \n          currentUser.sendMessage({\n            text: newMessage,\n            roomId: `${currentRoom.id}`\n          });\n      \n          this.setState({\n            newMessage: \"\"\n          });\n        }\n        \n    connectToRoom = (id) => {\n          const { currentUser } = this.state;\n          return currentUser\n            .subscribeToRoom({\n              roomId: `${id}`,\n              messageLimit: 100,\n              hooks: {\n                onMessage: message => {\n                  this.setState({\n                    messages: [...this.state.messages, message]\n                  });\n                },\n              }\n            })\n            .then(currentRoom => {\n              this.setState({\n                currentRoom,\n                isChatOpen: true\n              });\n              this.props.callbackFromParent(true);\n            });\n        }\n  \n    showDialog = () => {\n        this.setState({\n          isDialogOpen: !this.state.isDialogOpen\n        });\n      };\n  \n    addSupportStaffToRoom = () => {\n        const { currentRoom, currentUser } = this.state;\n        return currentUser.addUserToRoom({\n          userId: \"support\",\n          roomId: currentRoom.id\n        });\n      };\n  \n    createRoom = () => {\n        const { currentUser } = this.state;\n      \n        currentUser\n          .createRoom({\n            name: currentUser.name,\n            private: true\n          })\n          .then(room => this.connectToRoom(room.id))\n          .then(() => this.addSupportStaffToRoom())\n          .catch(console.error);\n      };\n  \n      launchChat = event => {\n        event.preventDefault();\n        this.setState({\n          isDialogOpen: false,\n          isLoading: true\n        });\n        \n  \n          const { userId } = this.state;\n  \n          if (userId === null || userId.trim() === \"\") {\n            alert(\"Invalid userId\");\n          } else {\n            axios\n              .post(\"http://localhost:3000/users\", { userId })\n              .then(() => {\n                const tokenProvider = new Chatkit.TokenProvider({\n                  url: \"http://localhost:3000/authenticate\"\n                });\n  \n                const chatManager = new Chatkit.ChatManager({\n                  instanceLocator: \"v1:us1:f1cbf8e9-3cc8-4abe-8013-6f535f84c39f\",\n                  userId,\n                  tokenProvider\n                });\n  \n                return chatManager.connect().then(currentUser => {\n                  this.setState(\n                    {\n                      currentUser,\n                      isLoading: false\n                    },\n                    () => this.createRoom()\n                  );\n                });\n              })\n              .catch(console.error);\n          }\n        };\n\n    handleDay = (num) => {\n       let day;\n       switch (num) {\n        case 0:\n        day = \"Sunday\";\n        break;\n      case 1:\n        day = \"Monday\";\n        break;\n      case 2:\n        day = \"Tuesday\";\n        break;\n      case 3:\n        day = \"Wednesday\";\n        break;\n      case 4:\n        day = \"Thursday\";\n        break;\n      case 5:\n        day = \"Friday\";\n        break;\n      case  6:\n        day = \"Saturday\";\n        break;\n      default: \n        day = \"I don't know what day it is!\";\n       }\n       return day;\n    }\n\n    checkTime = () => {\n        let time = new Date();\n        let hours = time.getHours();\n        if (this.state.day === 0 || hours < 8 || hours > 20) {\n            return (\n                <div>\n                    <Row>\n                        <Column lg=\"12\" md=\"12\" sm=\"12\" xs=\"12\">\n                            <TimerText style={{color: \"red\"}}>\n                                I'm not available\n                            </TimerText>\n                        </Column>\n                    </Row>\n                    <Row>\n                        <Column lg=\"12\" md=\"12\" sm=\"12\" xs=\"12\">\n                            <TimerText style={{color: \"red\"}}>\n                                Current time: {this.state.time}\n                            </TimerText>\n                        </Column>\n                    </Row>\n                    <Row>\n                        <Column lg=\"12\" md=\"12\" sm=\"12\" xs=\"12\">\n                            <TimerText style={{color: \"red\"}}>\n                                Day: {this.handleDay(this.state.day)}\n                            </TimerText>\n                        </Column>\n                    </Row>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <Row>\n                        <Column lg=\"12\" md=\"12\" sm=\"12\" xs=\"12\">\n                            <TimerText>\n                                I'm available\n                            </TimerText>\n                        </Column>\n                    </Row>\n                    <Row>\n                        <Column lg=\"12\" md=\"12\" sm=\"12\" xs=\"12\">\n                            <TimerText>\n                                Current time: {this.state.time}\n                            </TimerText>\n                        </Column>\n                    </Row>\n                    <Row>\n                        <Column lg=\"12\" md=\"12\" sm=\"12\" xs=\"12\">\n                            <TimerText>\n                                Day: {this.handleDay(this.state.day)}\n                            </TimerText>\n                        </Column>\n                    </Row>\n                </div>\n            )\n        }\n    }\n\n    render() {\n        const {\n            newMessage,\n            messages,\n            currentUser,\n            currentRoom,\n            isDialogOpen,\n            userId,\n            isLoading\n          } = this.state;\n        return (\n            <div>\n                <br/>\n                <Bounce bottom>\n                    <Row style={{width: \"90%\", margin: \"0 auto\"}}>\n                        <Column lg=\"4\" md=\"4\" sm=\"12\" xs=\"12\">\n                            <EmailMe />\n                        </Column>\n                        <Column lg=\"4\" md=\"4\" sm=\"12\" xs=\"12\">\n                            <CallMe />\n                        </Column>\n                        <Column lg=\"4\" md=\"4\" sm=\"12\" xs=\"12\">\n                        <div style={{margin: \"10px\"}}>\n                            <div>\n                                <Box onClick={this.showDialog}>\n                                    <Row>\n                                        <Column lg=\"12\" md=\"12\" sm=\"12\" xs=\"12\">\n                                            <Head>MESSAGE</Head>\n                                        </Column>\n                                    </Row>\n                                    <br />\n                                    <Row>\n                                        <Column lg=\"12\" md=\"12\" sm=\"12\" xs=\"12\">\n                                            <Text>\n                                                We can also live chat online. Drop me a line here. Again, if the below text is red, \n                                                I'm not available, but you can leave me a message and I'll respond as soon as possible.\n                                            </Text>\n                                        </Column>\n                                    </Row>\n                                </Box>     \n                                </div>\n                                 {currentRoom ? (\n                                 \n                                   <ChatWidget\n                                     handleBox={this.handleBox}\n                                     newMessage={newMessage}\n                                     sendMessage={this.sendMessage}\n                                     handleInput={this.handleInput}\n                                     currentUser={currentUser}\n                                     messages={messages}\n                                   />\n                                \n                                 ) : \n                                   null\n                                 }\n\n                                 {isLoading ? <Loader /> : null}\n                             \n                                 {isDialogOpen ? (\n                                   <DialogModal\n                                     username={userId}\n                                     handleInput={this.handleInput}\n                                     launchChat={this.launchChat}\n                                     handleBox={this.handleBox}\n                                   />\n                                 ) : null}\n                            </div>\n                        </Column>\n                    </Row>\n                </Bounce>\n                <br/>\n                <Row>\n                    <Column lg=\"12\" md=\"12\" sm=\"12\" xs=\"12\">\n                        <Timer>\n                            {this.checkTime()}\n                        </Timer>\n                    </Column> \n                </Row>\n                <br/>\n            </div>\n        )\n    }\n};\n\nexport default MyContacts;"]},"metadata":{},"sourceType":"module"}