{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/mitchellwaite/Personal-Website/mitchtwaite/Portafolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject7() {\n  const data = _taggedTemplateLiteral([\"\\n    height: 20px;\\n    width: 20px;\\n\\n    :hover {\\n        cursor: pointer;\\n    }\\n\"]);\n\n  _templateObject7 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  const data = _taggedTemplateLiteral([\"\\n    background-color: #bfbfbf;\\n    display: table;\\n    margin: 10vh 0 10vh 0;\\n    text-align: center;\\n    width: 100%;\\n    opacity: 2;\\n\"]);\n\n  _templateObject6 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  const data = _taggedTemplateLiteral([\"\\n    color: black;\\n    font-family: \\\"Lato\\\", Helvetica, sans-serif;\\n    font-size: \", \";\\n    margin: 0 auto;\\n    text-align: center;\\n    width: 50%;\\n\\n    @media only screen and (max-width: 320px) {\\n        font-size: \", \";\\n        width: 90%\\n    }\\n\\n    @media only screen and (min-width: 321px) and (max-width: 767px) {\\n        font-size: \", \";\\n        width: 90%\\n    }\\n\\n    @media only screen and (min-width: 767px) and (max-width: 1024px) {\\n        font-size: \", \";\\n        width: 90%\\n    }\\n\\n    @media only screen and (min-width: 1025px) and (max-width: 1300px) {\\n    \\n    }\\n    \\n\"]);\n\n  _templateObject5 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n    display: block;\\n    height: 100%;\\n    width: 100%;\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n    float: left;\\n    margin: 0 auto;\\n    \", \";\\n\\n    @media only screen and (min-width: 768px) {\\n        \", \";\\n    }\\n\\n    @media only screen and (min-width: 992px) {\\n        \", \";\\n    }\\n\\n    @media only screen and (min-width: 1200px) {\\n        \", \";\\n    }\\n\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    &::after {\\n        content: \\\"\\\";\\n        clear: both;\\n        display: table;\\n    }\\n    margin: 35px;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  body {\\n    color: #edeae7;\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from \"styled-components\";\nimport { createGlobalStyle } from 'styled-components';\nexport const GlobalStyle = createGlobalStyle(_templateObject());\nexport const Row = styled.div(_templateObject2());\n\nfunction getWidthString(span) {\n  if (!span) return;\n  let width = span / 12 * 100;\n  return \"width \".concat(width, \"%;\");\n}\n\nexport const Column = styled.div(_templateObject3(), ({\n  xs\n}) => xs ? getWidthString(xs) : \"width: 100%\", ({\n  sm\n}) => sm && getWidthString(sm), ({\n  md\n}) => md && getWidthString(md), ({\n  lg\n}) => lg && getWidthString(lg));\nexport const PhantomWrapper = styled.div(_templateObject4());\nexport const Text = styled.h1(_templateObject5(), props => props.bod ? \"1.6em\" : \"2.5em\", props => props.bod ? \"1.2em\" : \"1.8em\", props => props.bod ? \"1.3em\" : \"1.8em\", props => props.bod ? \"1.5em\" : \"2.3em\");\nexport const Container = styled.div(_templateObject6());\nexport const Icon = styled.img(_templateObject7());","map":{"version":3,"sources":["/Users/mitchellwaite/Personal-Website/mitchtwaite/Portafolio/client/src/pages/About/styled.js"],"names":["styled","createGlobalStyle","GlobalStyle","Row","div","getWidthString","span","width","Column","xs","sm","md","lg","PhantomWrapper","Text","h1","props","bod","Container","Icon","img"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AAEA,SAASC,iBAAT,QAAkC,mBAAlC;AAEA,OAAO,MAAMC,WAAW,GAAGD,iBAAH,mBAAjB;AAMP,OAAO,MAAME,GAAG,GAAGH,MAAM,CAACI,GAAV,oBAAT;;AASP,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAC1B,MAAI,CAACA,IAAL,EAAW;AAEX,MAAIC,KAAK,GAAGD,IAAI,GAAG,EAAP,GAAY,GAAxB;AACA,yBAAgBC,KAAhB;AACH;;AAED,OAAO,MAAMC,MAAM,GAAGR,MAAM,CAACI,GAAV,qBAGb,CAAC;AAAEK,EAAAA;AAAF,CAAD,KAAaA,EAAE,GAAGJ,cAAc,CAACI,EAAD,CAAjB,GAAwB,aAH1B,EAMT,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAYA,EAAE,IAAIL,cAAc,CAACK,EAAD,CANvB,EAUT,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAYA,EAAE,IAAIN,cAAc,CAACM,EAAD,CAVvB,EAcT,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAYA,EAAE,IAAIP,cAAc,CAACO,EAAD,CAdvB,CAAZ;AAmBP,OAAO,MAAMC,cAAc,GAAGb,MAAM,CAACI,GAAV,oBAApB;AAMP,OAAO,MAAMU,IAAI,GAAGd,MAAM,CAACe,EAAV,qBAGAC,KAAK,IAAIA,KAAK,CAACC,GAAN,GAAY,OAAZ,GAAsB,OAH/B,EASID,KAAK,IAAIA,KAAK,CAACC,GAAN,GAAY,OAAZ,GAAsB,OATnC,EAcID,KAAK,IAAIA,KAAK,CAACC,GAAN,GAAY,OAAZ,GAAsB,OAdnC,EAmBID,KAAK,IAAIA,KAAK,CAACC,GAAN,GAAY,OAAZ,GAAsB,OAnBnC,CAAV;AA6BP,OAAO,MAAMC,SAAS,GAAGlB,MAAM,CAACI,GAAV,oBAAf;AASP,OAAO,MAAMe,IAAI,GAAGnB,MAAM,CAACoB,GAAV,oBAAV","sourcesContent":["import styled from \"styled-components\";\n\nimport { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    color: #edeae7;\n  }\n`;\n\nexport const Row = styled.div`\n    &::after {\n        content: \"\";\n        clear: both;\n        display: table;\n    }\n    margin: 35px;\n`;\n\nfunction getWidthString(span) {\n    if (!span) return;\n\n    let width = span / 12 * 100;\n    return `width ${width}%;`;\n}\n\nexport const Column = styled.div`\n    float: left;\n    margin: 0 auto;\n    ${({ xs }) => (xs ? getWidthString(xs) : \"width: 100%\")};\n\n    @media only screen and (min-width: 768px) {\n        ${({ sm }) => sm && getWidthString(sm)};\n    }\n\n    @media only screen and (min-width: 992px) {\n        ${({ md }) => md && getWidthString(md)};\n    }\n\n    @media only screen and (min-width: 1200px) {\n        ${({ lg }) => lg && getWidthString(lg)};\n    }\n\n`;\n\nexport const PhantomWrapper = styled.div`\n    display: block;\n    height: 100%;\n    width: 100%;\n`;\n\nexport const Text = styled.h1`\n    color: black;\n    font-family: \"Lato\", Helvetica, sans-serif;\n    font-size: ${props => props.bod ? \"1.6em\" : \"2.5em\"};\n    margin: 0 auto;\n    text-align: center;\n    width: 50%;\n\n    @media only screen and (max-width: 320px) {\n        font-size: ${props => props.bod ? \"1.2em\" : \"1.8em\"};\n        width: 90%\n    }\n\n    @media only screen and (min-width: 321px) and (max-width: 767px) {\n        font-size: ${props => props.bod ? \"1.3em\" : \"1.8em\"};\n        width: 90%\n    }\n\n    @media only screen and (min-width: 767px) and (max-width: 1024px) {\n        font-size: ${props => props.bod ? \"1.5em\" : \"2.3em\"};\n        width: 90%\n    }\n\n    @media only screen and (min-width: 1025px) and (max-width: 1300px) {\n    \n    }\n    \n`;\n\nexport const Container = styled.div`\n    background-color: #bfbfbf;\n    display: table;\n    margin: 10vh 0 10vh 0;\n    text-align: center;\n    width: 100%;\n    opacity: 2;\n`;\n\nexport const Icon = styled.img`\n    height: 20px;\n    width: 20px;\n\n    :hover {\n        cursor: pointer;\n    }\n`;"]},"metadata":{},"sourceType":"module"}