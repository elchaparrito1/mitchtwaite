{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/mitchellwaite/Personal-Website/mitchtwaite/Portafolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject8() {\n  const data = _taggedTemplateLiteral([\"\\n    border-radius: 0;\\n    font-family: \\\"Lato\\\", Helvetica, sans-serif;\\n    border: none;\\n    height: 50px;\\n    padding: 20px;\\n    font-size: 16px;\\n    background-color: #f6f6f6;\\n    width: 100%;\\n    float: left;\\n\\n    :focus {\\n        outline: #003366;\\n    }\\n\\n    :active {\\n        outline: #003366;\\n    }\\n\"]);\n\n  _templateObject8 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  const data = _taggedTemplateLiteral([\"\\n    height: 350px;\\n    overflow-y: auto;\\n    padding: 10px;\\n    background: white;\\n\"]);\n\n  _templateObject7 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  const data = _taggedTemplateLiteral([\"\\n    width: 100%;\\n    height: 50px;\\n    background-color: black;\\n    display: flex;\\n    justify-content: center;\\n    top: 0;\\n\"]);\n\n  _templateObject6 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  const data = _taggedTemplateLiteral([\"\\n    position: fixed;\\n    right: 40px;\\n    bottom: 40px;\\n    width: 400px;\\n    border: 1px solid #ccc;\\n    z-index: 10;\\n\\n    @media only screen and (max-width: 320px) {\\n        margin: 0 auto;\\n        width: 300px;\\n        left: 0;\\n        right: 0;\\n    }\\n\\n    @media only screen and (min-width: 321px) and (max-width: 767px) {\\n        margin: 0 auto;\\n        width: 300px;\\n        left: 0;\\n        right: 0;\\n    }\\n\"]);\n\n  _templateObject5 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n    font-family: \\\"Lato\\\", Helvetica, sans-serif;\\n    font-size: 18px;\\n    margin-bottom: 0;\\n    color: white;\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n    border: none;\\n    background-color: #f6f6f6;\\n    color: black;\\n    height: 50px;\\n    font-size: 1.1em\\n    font-family: \\\"Lato\\\", Helvetica, sans-serif;\\n\\n    :hover {\\n        color: #003366;\\n        cursor: pointer;\\n    }\\n\\n    :focus {\\n        border: 0;\\n        outline: none;\\n    }\\n\\n    :active {\\n        border: 0;\\n        outline: none;\\n    }\\n\\n    @media only screen and (min-width: 320px) and (max-width: 1024px) {\\n        border: none;\\n        color: none;\\n    }\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    float: left;\\n    \", \";\\n\\n    @media only screen and (min-width: 768px) {\\n        \", \";\\n    }\\n\\n    @media only screen and (min-width: 992px) {\\n        \", \";\\n    }\\n\\n    @media only screen and (min-width: 1200px) {\\n        \", \";\\n    }\\n\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    &::after {\\n        content: \\\"\\\";\\n        clear: both;\\n        display: table;\\n    }\\n    \\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from \"styled-components\";\nexport const Row = styled.div(_templateObject());\n\nfunction getWidthString(span) {\n  if (!span) return;\n  let width = span / 12 * 100;\n  return \"width \".concat(width, \"%;\");\n}\n\nexport const Column = styled.div(_templateObject2(), ({\n  xs\n}) => xs ? getWidthString(xs) : \"width: 100%\", ({\n  sm\n}) => sm && getWidthString(sm), ({\n  md\n}) => md && getWidthString(md), ({\n  lg\n}) => lg && getWidthString(lg));\nexport const Button = styled.button(_templateObject3());\nexport const H2 = styled.h2(_templateObject4());\nexport const ChatWidge = styled.div(_templateObject5());\nexport const ChatHeader = styled.header(_templateObject6());\nexport const ChatBody = styled.section(_templateObject7());\nexport const MessageInput = styled.input(_templateObject8());","map":{"version":3,"sources":["/Users/mitchellwaite/Personal-Website/mitchtwaite/Portafolio/client/src/components/ChatWidget/styled.js"],"names":["styled","Row","div","getWidthString","span","width","Column","xs","sm","md","lg","Button","button","H2","h2","ChatWidge","ChatHeader","header","ChatBody","section","MessageInput","input"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AAEA,OAAO,MAAMC,GAAG,GAAGD,MAAM,CAACE,GAAV,mBAAT;;AASP,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAC1B,MAAI,CAACA,IAAL,EAAW;AAEX,MAAIC,KAAK,GAAGD,IAAI,GAAG,EAAP,GAAY,GAAxB;AACA,yBAAgBC,KAAhB;AACH;;AAED,OAAO,MAAMC,MAAM,GAAGN,MAAM,CAACE,GAAV,qBAEb,CAAC;AAAEK,EAAAA;AAAF,CAAD,KAAaA,EAAE,GAAGJ,cAAc,CAACI,EAAD,CAAjB,GAAwB,aAF1B,EAKT,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAYA,EAAE,IAAIL,cAAc,CAACK,EAAD,CALvB,EAST,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAYA,EAAE,IAAIN,cAAc,CAACM,EAAD,CATvB,EAaT,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAYA,EAAE,IAAIP,cAAc,CAACO,EAAD,CAbvB,CAAZ;AAkBP,OAAO,MAAMC,MAAM,GAAGX,MAAM,CAACY,MAAV,oBAAZ;AA6BP,OAAO,MAAMC,EAAE,GAAGb,MAAM,CAACc,EAAV,oBAAR;AAOP,OAAO,MAAMC,SAAS,GAAGf,MAAM,CAACE,GAAV,oBAAf;AAuBP,OAAO,MAAMc,UAAU,GAAGhB,MAAM,CAACiB,MAAV,oBAAhB;AASP,OAAO,MAAMC,QAAQ,GAAGlB,MAAM,CAACmB,OAAV,oBAAd;AAOP,OAAO,MAAMC,YAAY,GAAGpB,MAAM,CAACqB,KAAV,oBAAlB","sourcesContent":["import styled from \"styled-components\";\n\nexport const Row = styled.div`\n    &::after {\n        content: \"\";\n        clear: both;\n        display: table;\n    }\n    \n`;\n\nfunction getWidthString(span) {\n    if (!span) return;\n\n    let width = span / 12 * 100;\n    return `width ${width}%;`;\n}\n\nexport const Column = styled.div`\n    float: left;\n    ${({ xs }) => (xs ? getWidthString(xs) : \"width: 100%\")};\n\n    @media only screen and (min-width: 768px) {\n        ${({ sm }) => sm && getWidthString(sm)};\n    }\n\n    @media only screen and (min-width: 992px) {\n        ${({ md }) => md && getWidthString(md)};\n    }\n\n    @media only screen and (min-width: 1200px) {\n        ${({ lg }) => lg && getWidthString(lg)};\n    }\n\n`;\n\nexport const Button = styled.button`\n    border: none;\n    background-color: #f6f6f6;\n    color: black;\n    height: 50px;\n    font-size: 1.1em\n    font-family: \"Lato\", Helvetica, sans-serif;\n\n    :hover {\n        color: #003366;\n        cursor: pointer;\n    }\n\n    :focus {\n        border: 0;\n        outline: none;\n    }\n\n    :active {\n        border: 0;\n        outline: none;\n    }\n\n    @media only screen and (min-width: 320px) and (max-width: 1024px) {\n        border: none;\n        color: none;\n    }\n`;\n\nexport const H2 = styled.h2`\n    font-family: \"Lato\", Helvetica, sans-serif;\n    font-size: 18px;\n    margin-bottom: 0;\n    color: white;\n`;\n\nexport const ChatWidge = styled.div`\n    position: fixed;\n    right: 40px;\n    bottom: 40px;\n    width: 400px;\n    border: 1px solid #ccc;\n    z-index: 10;\n\n    @media only screen and (max-width: 320px) {\n        margin: 0 auto;\n        width: 300px;\n        left: 0;\n        right: 0;\n    }\n\n    @media only screen and (min-width: 321px) and (max-width: 767px) {\n        margin: 0 auto;\n        width: 300px;\n        left: 0;\n        right: 0;\n    }\n`;\n\nexport const ChatHeader = styled.header`\n    width: 100%;\n    height: 50px;\n    background-color: black;\n    display: flex;\n    justify-content: center;\n    top: 0;\n`;\n\nexport const ChatBody = styled.section`\n    height: 350px;\n    overflow-y: auto;\n    padding: 10px;\n    background: white;\n`;\n\nexport const MessageInput = styled.input`\n    border-radius: 0;\n    font-family: \"Lato\", Helvetica, sans-serif;\n    border: none;\n    height: 50px;\n    padding: 20px;\n    font-size: 16px;\n    background-color: #f6f6f6;\n    width: 100%;\n    float: left;\n\n    :focus {\n        outline: #003366;\n    }\n\n    :active {\n        outline: #003366;\n    }\n`;\n\n"]},"metadata":{},"sourceType":"module"}